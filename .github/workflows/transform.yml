name: Q Code Transformation

on:
  push:
    branches:
      - 'Q-TRANSFORM-issue-*'

jobs:
  q-code-transformation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Debug - List available files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in root:"
          ls -la
          echo "Files in movie-service-utils:"
          ls -la movie-service-utils/
          echo "Files in movie-service-utils/built-library:"
          ls -la movie-service-utils/built-library/
          echo "Files in movie-service-utils/built-library/0_1_0:"
          ls -la movie-service-utils/built-library/0_1_0/

      - name: Install pre-compiled utils dependency
        run: |
          # Try to install the pre-compiled movie-service-utils JAR to local Maven repository
          if [ -f "movie-service-utils/built-library/0_1_0/movie-service-utils-0.1.0.jar" ]; then
            echo "Pre-compiled JAR found, but let's build from source to ensure method compatibility..."
            cd movie-service-utils
            # First, let's see what's in the current MovieUtils class
            echo "Current MovieUtils class content:"
            cat src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            # Add both missing methods to ensure compatibility
            echo "" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "    /**" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "     * Validates if a movie name meets the required criteria" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "     * @param movieName The name of the movie to validate" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "     * @return true if the movie name is valid, false otherwise" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "     */" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "    public static boolean isValidMovieName(String movieName) {" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "        return isValidMovie(movieName, 1); // Delegate to existing method" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "    }" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "}" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            # Remove the original closing brace since we added a new one
            sed -i '$ d' src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            sed -i '$ d' src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "Updated MovieUtils class content:"
            cat src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            # Temporarily modify the pom.xml to use Java 8 and correct group ID/version
            sed -i 's/<java.version>17<\/java.version>/<java.version>8<\/java.version>/g' pom.xml
            sed -i 's/<maven.compiler.source>17<\/maven.compiler.source>/<maven.compiler.source>8<\/maven.compiler.source>/g' pom.xml
            sed -i 's/<maven.compiler.target>17<\/maven.compiler.target>/<maven.compiler.target>8<\/maven.compiler.target>/g' pom.xml
            sed -i 's/<maven.compiler.release>17<\/maven.compiler.release>/<maven.compiler.release>8<\/maven.compiler.release>/g' pom.xml
            sed -i 's/<groupId>org.amazonaws.samples<\/groupId>/<groupId>com.amazonaws.samples<\/groupId>/g' pom.xml
            sed -i 's/<version>0.2.0<\/version>/<version>0.1.0<\/version>/g' pom.xml
            echo "Building utils module from source with fixes..."
            mvn clean install -DskipTests
            cd ..
          else
            echo "Pre-compiled JAR not found, building from source..."
            cd movie-service-utils
            # Same fixes as above
            echo "" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "    public static boolean isValidMovieName(String movieName) {" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "        return isValidMovie(movieName, 1);" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "    }" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            echo "}" >> src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            sed -i '$ d' src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            sed -i '$ d' src/main/java/com/amazonaws/samples/appconfig/utils/MovieUtils.java
            sed -i 's/<java.version>17<\/java.version>/<java.version>8<\/java.version>/g' pom.xml
            sed -i 's/<maven.compiler.source>17<\/maven.compiler.source>/<maven.compiler.source>8<\/maven.compiler.source>/g' pom.xml
            sed -i 's/<maven.compiler.target>17<\/maven.compiler.target>/<maven.compiler.target>8<\/maven.compiler.target>/g' pom.xml
            sed -i 's/<maven.compiler.release>17<\/maven.compiler.release>/<maven.compiler.release>8<\/maven.compiler.release>/g' pom.xml
            sed -i 's/<groupId>org.amazonaws.samples<\/groupId>/<groupId>com.amazonaws.samples<\/groupId>/g' pom.xml
            sed -i 's/<version>0.2.0<\/version>/<version>0.1.0<\/version>/g' pom.xml
            mvn clean install -DskipTests
            cd ..
          fi

      - name: Build and copy dependencies
        run: |
          # Build the main project (utils dependency is now available in local repo)
          mvn clean verify -DskipTests
          mvn dependency:copy-dependencies -DoutputDirectory=dependencies -Dmdep.useRepositoryLayout=true -Dmdep.copyPom=true -Dmdep.addParentPoms=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: q-code-transformation-dependencies
          path: dependencies